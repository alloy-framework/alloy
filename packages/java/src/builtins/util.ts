import type { SymbolCreator } from "@alloy-js/core";
import { createLibrary } from "../create-library.js";
// work around very strange issue where TypeScript complains that the inferred
// type of the below cannot be named without a reference to ../../alloy-js/core
// and demands a type annotation.
// eslint-disable-next-line @typescript-eslint/no-unused-vars
type dummy = SymbolCreator;

export const javaUtil = createLibrary({
  groupId: "java.util",
  artifactId: "java-util",
  version: "1.0.0",
  descriptor: {
    "java.util": [
      "Collection",
      "Comparator",
      "Deque",
      "Enumeration",
      "EventListener",
      "Formattable",
      "Iterator",
      "List",
      "ListIterator",
      "Map",
      "Map.Entry",
      "NavigableMap",
      "NavigableSet",
      "Observer",
      "PrimitiveIterator",
      "Queue",
      "RandomAccess",
      "Set",
      "SortedMap",
      "SortedSet",
      "Spliterator",
      "AbstractCollection",
      "AbstractList",
      "AbstractMap",
      "AbstractQueue",
      "AbstractSequentialList",
      "AbstractSet",
      "ArrayDeque",
      "ArrayList",
      "Arrays",
      "Base64",
      "BitSet",
      "Calendar",
      "Collections",
      "Currency",
      "Date",
      "Dictionary",
      "DoubleSummaryStatistics",
      "EnumMap",
      "EnumSet",
      "EventListenerProxy",
      "EventObject",
      "FormattableFlags",
      "Formatter",
      "GregorianCalendar",
      "HashMap",
      "HashSet",
      "Hashtable",
      "IdentityHashMap",
      "IntSummaryStatistics",
      "LinkedHashMap",
      "LinkedHashSet",
      "LinkedList",
      "ListResourceBundle",
      "Locale",
      "LongSummaryStatistics",
      "Objects",
      "Observable",
      "Optional",
      "OptionalDouble",
      "OptionalInt",
      "OptionalLong",
      "PriorityQueue",
      "Properties",
      "PropertyPermission",
      "PropertyResourceBundle",
      "Random",
      "ResourceBundle",
      "ResourceBundle.Control",
      "Scanner",
      "ServiceLoader",
      "SimpleTimeZone",
      "Spliterators",
      "SplittableRandom",
      "Stack",
      "StringJoiner",
      "StringTokenizer",
      "Timer",
      "TimerTask",
      "TimeZone",
      "TreeMap",
      "TreeSet",
      "UUID",
      "Vector",
      "WeakHashMap",
      "ConcurrentModificationException",
      "DuplicateFormatFlagsException",
      "EmptyStackException",
      "FormatFlagsConversionMismatchException",
      "FormatterClosedException",
      "IllegalFormatCodePointException",
      "IllegalFormatConversionException",
      "IllegalFormatException",
      "IllegalFormatFlagsException",
      "IllegalFormatPrecisionException",
      "IllegalFormatWidthException",
      "IllformedLocaleException",
      "InputMismatchException",
      "InvalidPropertiesFormatException",
      "MissingFormatArgumentException",
      "MissingFormatWidthException",
      "MissingResourceException",
      "NoSuchElementException",
      "TooManyListenersException",
      "UnknownFormatConversionException",
      "UnknownFormatFlagsException",
    ],
  },
});
